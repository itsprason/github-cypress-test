name: End-to-end tests
on: push
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6
              # after the test run completes store videos and any screenshots
      - uses: actions/upload-artifact@v3
        # add the line below to store screenshots only on failures
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore
      
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore 
          
        # Send notification to Teams on failure
      - name: Send Teams notification on failure
        if: failure()
        env:
          WEBHOOK_URL: ${{ secrets.MICROSOFT_TEAMS_WEBHOOK }}
        run: |
          timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          uri="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          message="It appears that the Cypress test has encountered a failure."

          payload='{
            "@type": "MessageCard",
            "@context": "http://schema.org/extensions",
            "themeColor": "FF0000",
            "title": "Cypress Test Failed",
            "text": "'"$message"'",
            "sections": [
              {
                "facts": [
                  {
                    "name": "Timestamp",
                    "value": "'"$timestamp"'"
                  }
                ]
              }
            ],
            "potentialAction": [
              {
                "@type": "OpenUri",
                "name": "View Details",
                "targets": [
                  {
                    "os": "default",
                    "uri": "'"$uri"'"
                  }
                ]
              }
            ]
          }'

          curl -H "Content-Type: application/json" -d "$payload" $WEBHOOK_URL
